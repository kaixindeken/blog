{"version":3,"sources":["utils/code-block.js","pages/detail/index.js"],"names":["CodeBlock","props","setRef","bind","el","this","codeEl","hljs","highlightBlock","ref","className","language","style","background","borderRadius","value","React","PureComponent","defaultProps","Title","Typography","Content","Layout","Detail","window","scrollTo","title","content","marked","setOptions","renderer","Renderer","highlight","code","highlightAuto","gfm","pedantic","sanitize","tables","breaks","smartLists","smartypants","padding","margin","subTitle","onBack","history","back","level","textAlign","fontSize","source","renderers","getDetail","match","params","id","connect","state","getIn","dispatch","actionCreators","withRouter"],"mappings":"ySAIMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,OAAS,EAAKA,OAAOC,KAAZ,gBAFC,E,mDAKZC,GACHC,KAAKC,OAASF,I,0CAIdG,IAAKC,eAAeH,KAAKC,U,2CAIzBC,IAAKC,eAAeH,KAAKC,U,+BAIzB,OACI,6BACI,0BACIG,IAAKJ,KAAKH,OACVQ,UAAS,mBAAsC,OAAxBL,KAAKJ,MAAMU,SAAoB,OAAQN,KAAKJ,MAAMU,UACzEC,MAAO,CAACC,WAAY,OAAOC,aAAc,IAExCT,KAAKJ,MAAMc,Y,GA1BRC,IAAMC,eAiC9BjB,EAAUkB,aAAe,CACrBP,SAAU,IAQCX,Q,QClCPmB,EAAUC,IAAVD,MACAE,EAAYC,IAAZD,QAGFE,E,uKAGEC,OAAOC,SAAS,EAAG,GADf,MAEqBpB,KAAKJ,MAAvByB,EAFH,EAEGA,MAAOC,EAFV,EAEUA,QAgBd,OAdAC,IAAOC,WAAW,CACdC,SAAU,IAAIF,IAAOG,SACrBC,UAAW,SAAUC,GACjB,OAAO1B,IAAK2B,cAAcD,GAAMlB,OAEpCoB,KAAK,EACLC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRC,QAAQ,EACRC,YAAY,EACZC,aAAa,IAIb,kBAACpB,EAAD,CAAST,MAAO,CAAE8B,QAAS,UAAWC,OAAO,WACzC,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIjB,MAAO,GACPkB,SAAU,OACVC,OAAQ,kBAAMrB,OAAOsB,QAAQC,UAEjC,kBAAC5B,EAAD,CAAO6B,MAAO,EAAGpC,MAAO,CAACqC,UAAU,WAAYvB,GAC/C,6BACA,yBAAKd,MAAO,CAACsC,SAAU,KACnB,kBAAC,IAAD,CACIC,OAAQxB,EACRyB,UAAW,CAACnB,KAAMjC,U,0CAStCK,KAAKJ,MAAMoD,UAAUhD,KAAKJ,MAAMqD,MAAMC,OAAOC,Q,GA1ChCvC,iBAyDNwC,uBAXC,SAACC,GAAD,MAAU,CACtBhC,MAAOgC,EAAMC,MAAM,CAAC,SAAS,UAC7BhC,QAAS+B,EAAMC,MAAM,CAAC,SAAS,gBAGjB,SAACC,GAAD,MAAa,CAC3BP,UAD2B,SACjBG,GACNI,EAASC,IAAeR,UAAUG,QAI3BC,CAA8BK,YAAWvC","file":"static/js/4.0b657fab.chunk.js","sourcesContent":["import React from \"react\";\nimport hljs from \"highlight.js\"\nimport PropTypes from 'prop-types'\n\nclass CodeBlock extends React.PureComponent {\n    constructor(props) {\n        super(props)\n        this.setRef = this.setRef.bind(this)\n    }\n\n    setRef(el) {\n        this.codeEl = el\n    }\n\n    componentDidMount() {\n        hljs.highlightBlock(this.codeEl)\n    }\n\n    componentDidUpdate() {\n        hljs.highlightBlock(this.codeEl)\n    }\n\n    render() {\n        return (\n            <pre>\n                <code\n                    ref={this.setRef}\n                    className={`language-${this.props.language === null ? 'bash': this.props.language}`}\n                    style={{background: \"#eee\",borderRadius: 4}}\n                >\n                    {this.props.value}\n                </code>\n            </pre>\n        )\n    }\n}\n\nCodeBlock.defaultProps = {\n    language: ''\n}\n\nCodeBlock.propTypes = {\n    value: PropTypes.string.isRequired,\n    language: PropTypes.string\n}\n\nexport default CodeBlock;\n","import React, { PureComponent} from \"react\";\nimport { Layout, Typography, PageHeader } from 'antd';\nimport {ContentDetail} from \"../style\";\nimport {connect} from \"react-redux\";\nimport {actionCreators} from \"./store\";\nimport marked from 'marked'\nimport hljs from \"highlight.js\";\nimport 'highlight.js/styles/xcode.css';\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport CodeBlock from \"../../utils/code-block\"\nimport { withRouter } from \"react-router-dom\"\n\nconst { Title } = Typography;\nconst { Content } = Layout;\n\n\nclass Detail extends PureComponent{\n\n    render(){\n        window.scrollTo(0, 0)\n        const {title, content} = this.props\n\n        marked.setOptions({\n            renderer: new marked.Renderer(),\n            highlight: function (code) {\n                return hljs.highlightAuto(code).value;\n            },\n            gfm: true, // 允许 Git Hub标准的markdown.\n            pedantic: false, // 不纠正原始模型任何的不良行为和错误（默认为false）\n            sanitize: false, // 对输出进行过滤（清理），将忽略任何已经输入的html代码（标签）\n            tables: true, // 允许支持表格语法（该选项要求 gfm 为true）\n            breaks: false, // 允许回车换行（该选项要求 gfm 为true）\n            smartLists: true, // 使用比原生markdown更时髦的列表\n            smartypants: false, // 使用更为时髦的标点\n        })\n\n        return (\n            <Content style={{ padding: '0 250px', margin:'50px 0' }}>\n                <ContentDetail>\n                    <PageHeader\n                        title={''}\n                        subTitle={'Back'}\n                        onBack={() => window.history.back()}\n                    />\n                    <Title level={2} style={{textAlign:\"center\"}}>{title}</Title>\n                    <br/>\n                    <div style={{fontSize: 16}}>\n                        <ReactMarkdown\n                            source={content}\n                            renderers={{code: CodeBlock}}\n                        />\n                    </div>\n                </ContentDetail>\n            </Content>\n        );\n    }\n\n    componentDidMount() {\n        this.props.getDetail(this.props.match.params.id);\n    }\n}\n\nconst mapState= (state)=>({\n    title: state.getIn(['detail','title']),\n    content: state.getIn(['detail','content'])\n})\n\nconst mapDispatch=(dispatch)=>({\n    getDetail(id){\n        dispatch(actionCreators.getDetail(id))\n    }\n})\n\nexport default connect(mapState,mapDispatch)(withRouter(Detail));\n"],"sourceRoot":""}